/*
	https://github.com/BlackOverlord666/mslinks
	
	Copyright (c) 2015 Dmitrii Shamrikov

	Licensed under the WTFPL
	You may obtain a copy of the License at
 
	http://www.wtfpl.net/about/
 
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*/
package mslinks.extra;

import io.ByteReader;
import io.ByteWriter;

import java.io.IOException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import mslinks.Serializable;
import mslinks.ShellLinkException;

public class ConsoleFEData implements Serializable {
	public static final int signature = 0xA0000004;
	public static final int size = 0xc;
	
	private String lang;
	
	public ConsoleFEData() {
		Locale l = Locale.getDefault();
		lang = l.getLanguage() + "-" + l.getCountry();
	}
	
	public ConsoleFEData(ByteReader br, int sz) throws ShellLinkException, IOException {
		if (sz != size) throw new ShellLinkException();
		int t = (int)br.read4bytes();
		lang = ids.get(t >>> 16);
	}

	@Override
	public void serialize(ByteWriter bw) throws IOException {
		bw.write4bytes(size);
		bw.write4bytes(signature);
		bw.write4bytes(langs.get(lang) << 16);
	}
	
	public String getLanguage() { return lang; }
	public ConsoleFEData setLanguage(String s) { lang = s; return this;}
	
	private static HashMap<String, Integer> langs = new HashMap<>(Map.ofEntries(
		Map.entry("ar", 0x0001),
		Map.entry("bg", 0x0002),
		Map.entry("ca", 0x0003),
		Map.entry("zh-Hans", 0x0004),
		Map.entry("cs", 0x0005),
		Map.entry("da", 0x0006),
		Map.entry("de", 0x0007),
		Map.entry("el", 0x0008),
		Map.entry("en", 0x0009),
		Map.entry("es", 0x000a),
		Map.entry("fi", 0x000b),
		Map.entry("fr", 0x000c),
		Map.entry("he", 0x000d),
		Map.entry("hu", 0x000e),
		Map.entry("is", 0x000f),
		Map.entry("it", 0x0010),
		Map.entry("ja", 0x0011),
		Map.entry("ko", 0x0012),
		Map.entry("nl", 0x0013),
		Map.entry("no", 0x0014),
		Map.entry("pl", 0x0015),
		Map.entry("pt", 0x0016),
		Map.entry("rm", 0x0017),
		Map.entry("ro", 0x0018),
		Map.entry("ru", 0x0019),
		Map.entry("bs", 0x001a),
		Map.entry("hr", 0x001a),
		Map.entry("sr", 0x001a),
		Map.entry("sk", 0x001b),
		Map.entry("sq", 0x001c),
		Map.entry("sv", 0x001d),
		Map.entry("th", 0x001e),
		Map.entry("tr", 0x001f),
		Map.entry("ur", 0x0020),
		Map.entry("id", 0x0021),
		Map.entry("uk", 0x0022),
		Map.entry("be", 0x0023),
		Map.entry("sl", 0x0024),
		Map.entry("et", 0x0025),
		Map.entry("lv", 0x0026),
		Map.entry("lt", 0x0027),
		Map.entry("tg", 0x0028),
		Map.entry("fa", 0x0029),
		Map.entry("vi", 0x002a),
		Map.entry("hy", 0x002b),
		Map.entry("az", 0x002c),
		Map.entry("eu", 0x002d),
		Map.entry("dsb", 0x002e),
		Map.entry("hsb", 0x002e),
		Map.entry("mk", 0x002f),
		Map.entry("st", 0x0030),
		Map.entry("ts", 0x0031),
		Map.entry("tn", 0x0032),
		Map.entry("ve", 0x0033),
		Map.entry("xh", 0x0034),
		Map.entry("zu", 0x0035),
		Map.entry("af", 0x0036),
		Map.entry("ka", 0x0037),
		Map.entry("fo", 0x0038),
		Map.entry("hi", 0x0039),
		Map.entry("mt", 0x003a),
		Map.entry("se", 0x003b),
		Map.entry("ga", 0x003c),
		Map.entry("yi", 0x003d),
		Map.entry("ms", 0x003e),
		Map.entry("kk", 0x003f),
		Map.entry("ky", 0x0040),
		Map.entry("sw", 0x0041),
		Map.entry("tk", 0x0042),
		Map.entry("uz", 0x0043),
		Map.entry("tt", 0x0044),
		Map.entry("bn", 0x0045),
		Map.entry("pa", 0x0046),
		Map.entry("gu", 0x0047),
		Map.entry("or", 0x0048),
		Map.entry("ta", 0x0049),
		Map.entry("te", 0x004a),
		Map.entry("kn", 0x004b),
		Map.entry("ml", 0x004c),
		Map.entry("as", 0x004d),
		Map.entry("mr", 0x004e),
		Map.entry("sa", 0x004f),
		Map.entry("mn", 0x0050),
		Map.entry("bo", 0x0051),
		Map.entry("cy", 0x0052),
		Map.entry("km", 0x0053),
		Map.entry("lo", 0x0054),
		Map.entry("my", 0x0055),
		Map.entry("gl", 0x0056),
		Map.entry("kok", 0x0057),
		Map.entry("mni", 0x0058),
		Map.entry("sd", 0x0059),
		Map.entry("syr", 0x005a),
		Map.entry("si", 0x005b),
		Map.entry("chr", 0x005c),
		Map.entry("iu", 0x005d),
		Map.entry("am", 0x005e),
		Map.entry("tzm", 0x005f),
		Map.entry("ks", 0x0060),
		Map.entry("ne", 0x0061),
		Map.entry("fy", 0x0062),
		Map.entry("ps", 0x0063),
		Map.entry("fil", 0x0064),
		Map.entry("dv", 0x0065),
		Map.entry("bin", 0x0066),
		Map.entry("ff", 0x0067),
		Map.entry("ha", 0x0068),
		Map.entry("ibb", 0x0069),
		Map.entry("yo", 0x006a),
		Map.entry("quz", 0x006b),
		Map.entry("nso", 0x006c),
		Map.entry("ba", 0x006d),
		Map.entry("lb", 0x006e),
		Map.entry("kl", 0x006f),
		Map.entry("ig", 0x0070),
		Map.entry("kr", 0x0071),
		Map.entry("om", 0x0072),
		Map.entry("ti", 0x0073),
		Map.entry("gn", 0x0074),
		Map.entry("haw", 0x0075),
		Map.entry("la", 0x0076),
		Map.entry("so", 0x0077),
		Map.entry("ii", 0x0078),
		Map.entry("pap", 0x0079),
		Map.entry("arn", 0x007a),
		Map.entry("moh", 0x007c),
		Map.entry("br", 0x007e),
		Map.entry("ug", 0x0080),
		Map.entry("mi", 0x0081),
		Map.entry("oc", 0x0082),
		Map.entry("co", 0x0083),
		Map.entry("gsw", 0x0084),
		Map.entry("sah", 0x0085),
		Map.entry("qut", 0x0086),
		Map.entry("rw", 0x0087),
		Map.entry("wo", 0x0088),
		Map.entry("prs", 0x008c),
		Map.entry("gd", 0x0091),
		Map.entry("ku", 0x0092),
		Map.entry("quc", 0x0093),
		Map.entry("ar-SA", 0x0401),
		Map.entry("bg-BG", 0x0402),
		Map.entry("ca-ES", 0x0403),
		Map.entry("zh-TW", 0x0404),
		Map.entry("cs-CZ", 0x0405),
		Map.entry("da-DK", 0x0406),
		Map.entry("de-DE", 0x0407),
		Map.entry("el-GR", 0x0408),
		Map.entry("en-US", 0x0409),
		Map.entry("es-ES_tradnl", 0x040a),
		Map.entry("fi-FI", 0x040b),
		Map.entry("fr-FR", 0x040c),
		Map.entry("he-IL", 0x040d),
		Map.entry("hu-HU", 0x040e),
		Map.entry("is-IS", 0x040f),
		Map.entry("it-IT", 0x0410),
		Map.entry("ja-JP", 0x0411),
		Map.entry("ko-KR", 0x0412),
		Map.entry("nl-NL", 0x0413),
		Map.entry("nb-NO", 0x0414),
		Map.entry("pl-PL", 0x0415),
		Map.entry("pt-BR", 0x0416),
		Map.entry("rm-CH", 0x0417),
		Map.entry("ro-RO", 0x0418),
		Map.entry("ru-RU", 0x0419),
		Map.entry("hr-HR", 0x041a),
		Map.entry("sk-SK", 0x041b),
		Map.entry("sq-AL", 0x041c),
		Map.entry("sv-SE", 0x041d),
		Map.entry("th-TH", 0x041e),
		Map.entry("tr-TR", 0x041f),
		Map.entry("ur-PK", 0x0420),
		Map.entry("id-ID", 0x0421),
		Map.entry("uk-UA", 0x0422),
		Map.entry("be-BY", 0x0423),
		Map.entry("sl-SI", 0x0424),
		Map.entry("et-EE", 0x0425),
		Map.entry("lv-LV", 0x0426),
		Map.entry("lt-LT", 0x0427),
		Map.entry("tg-Cyrl-TJ", 0x0428),
		Map.entry("fa-IR", 0x0429),
		Map.entry("vi-VN", 0x042a),
		Map.entry("hy-AM", 0x042b),
		Map.entry("az-Latn-AZ", 0x042c),
		Map.entry("eu-ES", 0x042d),
		Map.entry("hsb-DE", 0x042e),
		Map.entry("mk-MK", 0x042f),
		Map.entry("st-ZA", 0x0430),
		Map.entry("ts-ZA", 0x0431),
		Map.entry("tn-ZA", 0x0432),
		Map.entry("ve-ZA", 0x0433),
		Map.entry("xh-ZA", 0x0434),
		Map.entry("zu-ZA", 0x0435),
		Map.entry("af-ZA", 0x0436),
		Map.entry("ka-GE", 0x0437),
		Map.entry("fo-FO", 0x0438),
		Map.entry("hi-IN", 0x0439),
		Map.entry("mt-MT", 0x043a),
		Map.entry("se-NO", 0x043b),
		Map.entry("yi-Hebr", 0x043d),
		Map.entry("ms-MY", 0x043e),
		Map.entry("kk-KZ", 0x043f),
		Map.entry("ky-KG", 0x0440),
		Map.entry("sw-KE", 0x0441),
		Map.entry("tk-TM", 0x0442),
		Map.entry("uz-Latn-UZ", 0x0443),
		Map.entry("tt-RU", 0x0444),
		Map.entry("bn-IN", 0x0445),
		Map.entry("pa-IN", 0x0446),
		Map.entry("gu-IN", 0x0447),
		Map.entry("or-IN", 0x0448),
		Map.entry("ta-IN", 0x0449),
		Map.entry("te-IN", 0x044a),
		Map.entry("kn-IN", 0x044b),
		Map.entry("ml-IN", 0x044c),
		Map.entry("as-IN", 0x044d),
		Map.entry("mr-IN", 0x044e),
		Map.entry("sa-IN", 0x044f),
		Map.entry("mn-MN", 0x0450),
		Map.entry("bo-CN", 0x0451),
		Map.entry("cy-GB", 0x0452),
		Map.entry("km-KH", 0x0453),
		Map.entry("lo-LA", 0x0454),
		Map.entry("my-MM", 0x0455),
		Map.entry("gl-ES", 0x0456),
		Map.entry("kok-IN", 0x0457),
		Map.entry("mni-IN", 0x0458),
		Map.entry("sd-Deva-IN", 0x0459),
		Map.entry("syr-SY", 0x045a),
		Map.entry("si-LK", 0x045b),
		Map.entry("chr-Cher-US", 0x045c),
		Map.entry("iu-Cans-CA", 0x045d),
		Map.entry("am-ET", 0x045e),
		Map.entry("tzm-Arab-MA", 0x045f),
		Map.entry("ks-Arab", 0x0460),
		Map.entry("ne-NP", 0x0461),
		Map.entry("fy-NL", 0x0462),
		Map.entry("ps-AF", 0x0463),
		Map.entry("fil-PH", 0x0464),
		Map.entry("dv-MV", 0x0465),
		Map.entry("bin-NG", 0x0466),
		Map.entry("fuv-NG", 0x0467),
		Map.entry("ha-Latn-NG", 0x0468),
		Map.entry("ibb-NG", 0x0469),
		Map.entry("yo-NG", 0x046a),
		Map.entry("quz-BO", 0x046b),
		Map.entry("nso-ZA", 0x046c),
		Map.entry("ba-RU", 0x046d),
		Map.entry("lb-LU", 0x046e),
		Map.entry("kl-GL", 0x046f),
		Map.entry("ig-NG", 0x0470),
		Map.entry("kr-NG", 0x0471),
		Map.entry("om-ET", 0x0472),
		Map.entry("ti-ET", 0x0473),
		Map.entry("gn-PY", 0x0474),
		Map.entry("haw-US", 0x0475),
		Map.entry("la-Latn", 0x0476),
		Map.entry("so-SO", 0x0477),
		Map.entry("ii-CN", 0x0478),
		Map.entry("pap-029", 0x0479),
		Map.entry("arn-CL", 0x047a),
		Map.entry("moh-CA", 0x047c),
		Map.entry("br-FR", 0x047e),
		Map.entry("ug-CN", 0x0480),
		Map.entry("mi-NZ", 0x0481),
		Map.entry("oc-FR", 0x0482),
		Map.entry("co-FR", 0x0483),
		Map.entry("gsw-FR", 0x0484),
		Map.entry("sah-RU", 0x0485),
		Map.entry("qut-GT", 0x0486),
		Map.entry("rw-RW", 0x0487),
		Map.entry("wo-SN", 0x0488),
		Map.entry("prs-AF", 0x048c),
		Map.entry("plt-MG", 0x048d),
		Map.entry("zh-yue-HK", 0x048e),
		Map.entry("tdd-Tale-CN", 0x048f),
		Map.entry("khb-Talu-CN", 0x0490),
		Map.entry("gd-GB", 0x0491),
		Map.entry("ku-Arab-IQ", 0x0492),
		Map.entry("quc-CO", 0x0493),
		Map.entry("qps-ploc", 0x0501),
		Map.entry("qps-ploca", 0x05fe),
		Map.entry("ar-IQ", 0x0801),
		Map.entry("ca-ES-valencia", 0x0803),
		Map.entry("zh-CN", 0x0804),
		Map.entry("de-CH", 0x0807),
		Map.entry("en-GB", 0x0809),
		Map.entry("es-MX", 0x080a),
		Map.entry("fr-BE", 0x080c),
		Map.entry("it-CH", 0x0810),
		Map.entry("ja-Ploc-JP", 0x0811),
		Map.entry("nl-BE", 0x0813),
		Map.entry("nn-NO", 0x0814),
		Map.entry("pt-PT", 0x0816),
		Map.entry("ro-MD", 0x0818),
		Map.entry("ru-MD", 0x0819),
		Map.entry("sr-Latn-CS", 0x081a),
		Map.entry("sv-FI", 0x081d),
		Map.entry("ur-IN", 0x0820),
		Map.entry("az-Cyrl-AZ", 0x082c),
		Map.entry("dsb-DE", 0x082e),
		Map.entry("tn-BW", 0x0832),
		Map.entry("se-SE", 0x083b),
		Map.entry("ga-IE", 0x083c),
		Map.entry("ms-BN", 0x083e),
		Map.entry("uz-Cyrl-UZ", 0x0843),
		Map.entry("bn-BD", 0x0845),
		Map.entry("pa-Arab-PK", 0x0846),
		Map.entry("ta-LK", 0x0849),
		Map.entry("mn-Mong-CN", 0x0850),
		Map.entry("bo-BT", 0x0851),
		Map.entry("sd-Arab-PK", 0x0859),
		Map.entry("iu-Latn-CA", 0x085d),
		Map.entry("tzm-Latn-DZ", 0x085f),
		Map.entry("ks-Deva", 0x0860),
		Map.entry("ne-IN", 0x0861),
		Map.entry("ff-Latn-SN", 0x0867),
		Map.entry("quz-EC", 0x086b),
		Map.entry("ti-ER", 0x0873),
		Map.entry("qps-plocm", 0x09ff),
		Map.entry("ar-EG", 0x0c01),
		Map.entry("zh-HK", 0x0c04),
		Map.entry("de-AT", 0x0c07),
		Map.entry("en-AU", 0x0c09),
		Map.entry("es-ES", 0x0c0a),
		Map.entry("fr-CA", 0x0c0c),
		Map.entry("sr-Cyrl-CS", 0x0c1a),
		Map.entry("se-FI", 0x0c3b),
		Map.entry("mn-Mong-MN", 0x0c50),
		Map.entry("tmz-MA", 0x0c5f),
		Map.entry("quz-PE", 0x0c6b),
		Map.entry("ar-LY", 0x1001),
		Map.entry("zh-SG", 0x1004),
		Map.entry("de-LU", 0x1007),
		Map.entry("en-CA", 0x1009),
		Map.entry("es-GT", 0x100a),
		Map.entry("fr-CH", 0x100c),
		Map.entry("hr-BA", 0x101a),
		Map.entry("smj-NO", 0x103b),
		Map.entry("tzm-Tfng-MA", 0x105f),
		Map.entry("ar-DZ", 0x1401),
		Map.entry("zh-MO", 0x1404),
		Map.entry("de-LI", 0x1407),
		Map.entry("en-NZ", 0x1409),
		Map.entry("es-CR", 0x140a),
		Map.entry("fr-LU", 0x140c),
		Map.entry("bs-Latn-BA", 0x141a),
		Map.entry("smj-SE", 0x143b),
		Map.entry("ar-MA", 0x1801),
		Map.entry("en-IE", 0x1809),
		Map.entry("es-PA", 0x180a),
		Map.entry("fr-MC", 0x180c),
		Map.entry("sr-Latn-BA", 0x181a),
		Map.entry("sma-NO", 0x183b),
		Map.entry("ar-TN", 0x1c01),
		Map.entry("en-ZA", 0x1c09),
		Map.entry("es-DO", 0x1c0a),
		Map.entry("sr-Cyrl-BA", 0x1c1a),
		Map.entry("sma-SE", 0x1c3b),
		Map.entry("ar-OM", 0x2001),
		Map.entry("en-JM", 0x2009),
		Map.entry("es-VE", 0x200a),
		Map.entry("fr-RE", 0x200c),
		Map.entry("bs-Cyrl-BA", 0x201a),
		Map.entry("sms-FI", 0x203b),
		Map.entry("ar-YE", 0x2401),
		Map.entry("en-029", 0x2409),
		Map.entry("es-CO", 0x240a),
		Map.entry("fr-CD", 0x240c),
		Map.entry("sr-Latn-RS", 0x241a),
		Map.entry("smn-FI", 0x243b),
		Map.entry("ar-SY", 0x2801),
		Map.entry("en-BZ", 0x2809),
		Map.entry("es-PE", 0x280a),
		Map.entry("fr-SN", 0x280c),
		Map.entry("sr-Cyrl-RS", 0x281a),
		Map.entry("ar-JO", 0x2c01),
		Map.entry("en-TT", 0x2c09),
		Map.entry("es-AR", 0x2c0a),
		Map.entry("fr-CM", 0x2c0c),
		Map.entry("sr-Latn-ME", 0x2c1a),
		Map.entry("ar-LB", 0x3001),
		Map.entry("en-ZW", 0x3009),
		Map.entry("es-EC", 0x300a),
		Map.entry("fr-CI", 0x300c),
		Map.entry("sr-Cyrl-ME", 0x301a),
		Map.entry("ar-KW", 0x3401),
		Map.entry("en-PH", 0x3409),
		Map.entry("es-CL", 0x340a),
		Map.entry("fr-ML", 0x340c),
		Map.entry("ar-AE", 0x3801),
		Map.entry("en-ID", 0x3809),
		Map.entry("es-UY", 0x380a),
		Map.entry("fr-MA", 0x380c),
		Map.entry("ar-BH", 0x3c01),
		Map.entry("en-HK", 0x3c09),
		Map.entry("es-PY", 0x3c0a),
		Map.entry("fr-HT", 0x3c0c),
		Map.entry("ar-QA", 0x4001),
		Map.entry("en-IN", 0x4009),
		Map.entry("es-BO", 0x400a),
		Map.entry("ar-Ploc-SA", 0x4401),
		Map.entry("en-MY", 0x4409),
		Map.entry("es-SV", 0x440a),
		Map.entry("ar-145", 0x4801),
		Map.entry("en-SG", 0x4809),
		Map.entry("es-HN", 0x480a),
		Map.entry("en-AE", 0x4c09),
		Map.entry("es-NI", 0x4c0a),
		Map.entry("en-BH", 0x5009),
		Map.entry("es-PR", 0x500a),
		Map.entry("en-EG", 0x5409),
		Map.entry("es-US", 0x540a),
		Map.entry("en-JO", 0x5809),
		Map.entry("es-419", 0x580a),
		Map.entry("en-KW", 0x5c09),
		Map.entry("en-TR", 0x6009),
		Map.entry("en-YE", 0x6409),
		Map.entry("bs-Cyrl", 0x641a),
		Map.entry("bs-Latn", 0x681a),
		Map.entry("sr-Cyrl", 0x6c1a),
		Map.entry("sr-Latn", 0x701a),
		Map.entry("smn", 0x703b),
		Map.entry("az-Cyrl", 0x742c),
		Map.entry("sms", 0x743b),
		Map.entry("zh", 0x7804),
		Map.entry("nn", 0x7814),
		Map.entry("bs", 0x781a),
		Map.entry("az-Latn", 0x782c),
		Map.entry("sma", 0x783b),
		Map.entry("uz-Cyrl", 0x7843),
		Map.entry("mn-Cyrl", 0x7850),
		Map.entry("iu-Cans", 0x785d),
		Map.entry("tzm-Tfng", 0x785f),
		Map.entry("zh-Hant", 0x7c04),
		Map.entry("nb", 0x7c14),
		Map.entry("sr", 0x7c1a),
		Map.entry("tg-Cyrl", 0x7c28),
		Map.entry("dsb", 0x7c2e),
		Map.entry("smj", 0x7c3b),
		Map.entry("uz-Latn", 0x7c43),
		Map.entry("pa-Arab", 0x7c46),
		Map.entry("mn-Mong", 0x7c50),
		Map.entry("sd-Arab", 0x7c59),
		Map.entry("chr-Cher", 0x7c5c),
		Map.entry("iu-Latn", 0x7c5d),
		Map.entry("tzm-Latn", 0x7c5f),
		Map.entry("ff-Latn", 0x7c67),
		Map.entry("ha-Latn", 0x7c68),
		Map.entry("ku-Arab", 0x7c92)
	));
	
	private static HashMap<Integer, String> ids = new HashMap<>();
	
	static {
		for (var i : langs.entrySet())
			ids.put(i.getValue(), i.getKey());
	}
}
